Index: app/src/main/java/com/example/fyp_01/recommendations/StretchingAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.fyp_01.recommendations;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.fyp_01.R;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class StretchingAdapter extends RecyclerView.Adapter<StretchingAdapter.ViewHolder> {\r\n    ArrayList<StretchingModel> stretchingModels;\r\n    Context context;\r\n\r\n    public StretchingAdapter(Context context, ArrayList<StretchingModel> stretchingModels){\r\n        this.context = context;\r\n        this.stretchingModels = stretchingModels;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        //Create View\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.activities_stretching_item, parent, false);\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n        //Set Images to ImageView\r\n        holder.mImageView.setImageResource(stretchingModels.get(position).getStretchingActivitiesImages());\r\n        //Set Names to TextView\r\n        holder.mTextView.setText(stretchingModels.get(position).getStretchingActivitiesNames());\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return stretchingModels.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n        //Initialize Variables\r\n        ImageView mImageView;\r\n        TextView mTextView;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            //Assign Variable\r\n            mImageView = itemView.findViewById(R.id.imageView);\r\n            mTextView = itemView.findViewById(R.id.textView);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/fyp_01/recommendations/StretchingAdapter.java	(revision 4f6210a1701d9a3dd726eef4fd99c1aa569d5bb0)
+++ app/src/main/java/com/example/fyp_01/recommendations/StretchingAdapter.java	(date 1610736782008)
@@ -1,6 +1,8 @@
 package com.example.fyp_01.recommendations;
 
 import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -11,14 +13,16 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.example.fyp_01.R;
+import com.example.fyp_01.database.DatabaseHelper;
 
+import java.io.ByteArrayOutputStream;
 import java.util.ArrayList;
 
 public class StretchingAdapter extends RecyclerView.Adapter<StretchingAdapter.ViewHolder> {
     ArrayList<StretchingModel> stretchingModels;
     Context context;
 
-    public StretchingAdapter(Context context, ArrayList<StretchingModel> stretchingModels){
+    public StretchingAdapter(Context context, ArrayList<StretchingModel> stretchingModels) {
         this.context = context;
         this.stretchingModels = stretchingModels;
     }
@@ -33,10 +37,10 @@
 
     @Override
     public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
-        //Set Images to ImageView
-        holder.mImageView.setImageResource(stretchingModels.get(position).getStretchingActivitiesImages());
-        //Set Names to TextView
-        holder.mTextView.setText(stretchingModels.get(position).getStretchingActivitiesNames());
+        StretchingModel stretchingModel = stretchingModels.get(position);
+
+        holder.mTextView.setText(stretchingModel.getStretchingActivitiesName());
+        holder.mImageView.setImageBitmap(stretchingModel.getStretchingActivitiesImage());
     }
 
     @Override
Index: app/src/main/java/com/example/fyp_01/recommendations/ActivitiesRecommendation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.fyp_01.recommendations;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.fyp_01.R;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class ActivitiesRecommendation extends AppCompatActivity {\r\n    //Initialize Variables\r\n    RecyclerView mStretchingRecyclerView;\r\n\r\n    ArrayList<StretchingModel> stretchingModels;\r\n    StretchingAdapter stretchingAdapter;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activities_recommendation_page_recycler_container);\r\n\r\n        //Assign Variables\r\n        mStretchingRecyclerView = findViewById(R.id.stretchingRecyclerview);\r\n\r\n        //Creating Integer Array for Images\r\n        Integer[] stretchingActivitiesImages = {R.drawable.yoga_101, R.drawable.yoga_core, R.drawable.legs_warmup,\r\n                R.drawable.legs_cooldown, R.drawable.recovery_mobility};\r\n\r\n        //Creating String Array for texts\r\n        String[] stretchingActivitiesNames = {\"Yoga 101\", \"YogaCore\", \"Legs Warm up\", \"Legs Cool down\",\r\n        \"Recovery Mobility\"};\r\n\r\n        //Initialize ArrayList\r\n        stretchingModels = new ArrayList<>();\r\n        for(int i=0;i<stretchingActivitiesImages.length;i++){\r\n            StretchingModel stretchingModel = new StretchingModel(stretchingActivitiesImages[i], stretchingActivitiesNames[i]);\r\n            stretchingModels.add(stretchingModel);\r\n        }\r\n\r\n        //Design Horizontal Layout\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(ActivitiesRecommendation.this, LinearLayoutManager.HORIZONTAL,false);\r\n        mStretchingRecyclerView.setLayoutManager(layoutManager);\r\n        mStretchingRecyclerView.setItemAnimator(new DefaultItemAnimator());\r\n\r\n        //Initialize StretchingAdapter\r\n        stretchingAdapter = new StretchingAdapter(ActivitiesRecommendation.this, stretchingModels);\r\n        //Set StretchingAdapter to RecyclerView\r\n        mStretchingRecyclerView.setAdapter(stretchingAdapter);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/fyp_01/recommendations/ActivitiesRecommendation.java	(revision 4f6210a1701d9a3dd726eef4fd99c1aa569d5bb0)
+++ app/src/main/java/com/example/fyp_01/recommendations/ActivitiesRecommendation.java	(date 1610752701686)
@@ -1,5 +1,9 @@
 package com.example.fyp_01.recommendations;
 
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
 import android.os.Bundle;
 
 import androidx.appcompat.app.AppCompatActivity;
@@ -8,15 +12,20 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.example.fyp_01.R;
+import com.example.fyp_01.database.DatabaseHelper;
 
 import java.util.ArrayList;
 
 public class ActivitiesRecommendation extends AppCompatActivity {
-    //Initialize Variables
+    Context context;
+    DatabaseHelper databaseHelper;
     RecyclerView mStretchingRecyclerView;
 
     ArrayList<StretchingModel> stretchingModels;
     StretchingAdapter stretchingAdapter;
+    String activitiesName;
+    Bitmap imageToStoreBitmap;
+    int[] drawableIds;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -25,21 +34,17 @@
 
         //Assign Variables
         mStretchingRecyclerView = findViewById(R.id.stretchingRecyclerview);
-
-        //Creating Integer Array for Images
-        Integer[] stretchingActivitiesImages = {R.drawable.yoga_101, R.drawable.yoga_core, R.drawable.legs_warmup,
-                R.drawable.legs_cooldown, R.drawable.recovery_mobility};
-
-        //Creating String Array for texts
-        String[] stretchingActivitiesNames = {"Yoga 101", "YogaCore", "Legs Warm up", "Legs Cool down",
-        "Recovery Mobility"};
+        databaseHelper = new DatabaseHelper(this);
 
         //Initialize ArrayList
         stretchingModels = new ArrayList<>();
-        for(int i=0;i<stretchingActivitiesImages.length;i++){
-            StretchingModel stretchingModel = new StretchingModel(stretchingActivitiesImages[i], stretchingActivitiesNames[i]);
-            stretchingModels.add(stretchingModel);
-        }
+
+        // Add New Activities Image data to database from drawable folder
+        /*drawableIds = new int[]{};
+        addMultipleNewActivitiesImageData(drawableIds);*/
+        //addNewActivitiesImageData(R.drawable.recovery_mobility);
+
+        stretchingModels = databaseHelper.getActivitiesImageData();
 
         //Design Horizontal Layout
         LinearLayoutManager layoutManager = new LinearLayoutManager(ActivitiesRecommendation.this, LinearLayoutManager.HORIZONTAL,false);
@@ -51,4 +56,29 @@
         //Set StretchingAdapter to RecyclerView
         mStretchingRecyclerView.setAdapter(stretchingAdapter);
     }
+
+    private void addNewActivitiesImageData(int drawableId){
+        imageToStoreBitmap = BitmapFactory.decodeResource(getResources(), drawableId);
+        activitiesName = getResources().getResourceEntryName(drawableId);
+
+        StretchingModel stretchingModel = new StretchingModel(activitiesName, imageToStoreBitmap);
+        stretchingModels.add(stretchingModel);
+
+        databaseHelper.addActivitiesImageData(stretchingModel);
+    }
+
+    private void addMultipleNewActivitiesImageData(int[] drawableIds){
+        StretchingModel stretchingModel;
+
+        for(int i = 0; i<drawableIds.length; i++){
+            imageToStoreBitmap = BitmapFactory.decodeResource(getResources(), drawableIds[i]);
+            activitiesName = getResources().getResourceEntryName(drawableIds[i]);
+
+            stretchingModel = new StretchingModel(activitiesName, imageToStoreBitmap);
+            stretchingModels.add(stretchingModel);
+
+            databaseHelper.addActivitiesImageData(stretchingModel);
+        }
+    }
+
 }
Index: app/src/main/java/com/example/fyp_01/database/DatabaseHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.fyp_01.database;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.example.fyp_01.activities.ActivitiesController;\r\nimport com.example.fyp_01.user.UserController;\r\n\r\npublic class  DatabaseHelper extends SQLiteOpenHelper {\r\n\r\n    public static final String DATABASE_NAME = \"Database.db\";\r\n    public static final int VERSION_NAME = 8;\r\n    public static final String TABLE_USER = \"users_table\";\r\n    public static final String KEY_USER_ID = \"users_id\";\r\n    public static final String KEY_USER_NAME = \"users_name\";\r\n    public static final String KEY_USER_WORKOUT_GROUP = \"users_workout_group\";\r\n    public static final String KEY_USER_GOAL = \"users_goal\";\r\n    public static final String KEY_USER_DAYS_AVAILABLE = \"users_days_available\";\r\n    public static final String KEY_USER_INTENSITY = \"users_intensity\";\r\n\r\n    public static final String TABLE_ACTIVITIES = \"activities_table\";\r\n    public static final String KEY_ACTIVITIES_ID = \"activities_id\";\r\n    public static final String KEY_ACTIVITIES_NAME = \"activities_name\";\r\n    public static final String KEY_ACTIVITIES_ACTIVITY_TYPE = \"activities_type\";\r\n    public static final String KEY_ACTIVITIES_INTENSITY_LEVEL = \"activities_intensity\";\r\n    public static final String KEY_ACTIVITIES_DAYS_PER_WEEK = \"activities_days_per_week\";\r\n    public static final String KEY_ACTIVITIES_WORKOUT_LEVEL = \"activities_workout_level\";\r\n    public static final String KEY_ACTIVITIES_EQUIPMENT_GROUP = \"activities_equipment_group\";\r\n\r\n    public DatabaseHelper(@Nullable Context context) {\r\n        super(context, DATABASE_NAME, null, VERSION_NAME);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db) {\r\n        db.execSQL(\"CREATE TABLE \" + TABLE_USER + \" (\" + KEY_USER_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT, \" + KEY_USER_NAME + \" TEXT, \" +\r\n                KEY_USER_WORKOUT_GROUP + \" TEXT, \" + KEY_USER_GOAL + \" TEXT, \" + KEY_USER_DAYS_AVAILABLE + \" INTEGER, \" + KEY_USER_INTENSITY + \" TEXT\" +\")\");\r\n\r\n        db.execSQL(\"CREATE TABLE \" + TABLE_ACTIVITIES + \" (\" + KEY_ACTIVITIES_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT, \" + KEY_ACTIVITIES_NAME + \" TEXT, \" +\r\n                KEY_ACTIVITIES_ACTIVITY_TYPE + \" TEXT, \" + KEY_ACTIVITIES_WORKOUT_LEVEL + \" TEXT, \" + KEY_ACTIVITIES_DAYS_PER_WEEK + \" INTEGER, \" +\r\n                KEY_ACTIVITIES_INTENSITY_LEVEL + \" TEXT,\" + KEY_ACTIVITIES_EQUIPMENT_GROUP + \" TEXT\" +\")\");\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n        db.execSQL(\"DROP TABLE IF EXISTS \" + TABLE_USER);\r\n        db.execSQL(\"DROP TABLE IF EXISTS \" + TABLE_ACTIVITIES);\r\n        onCreate(db);\r\n    }\r\n\r\n    public boolean addUserData(UserController user){\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(KEY_USER_NAME, user.getUserName());\r\n        contentValues.put(KEY_USER_WORKOUT_GROUP, user.getWorkoutGroup());\r\n        contentValues.put(KEY_USER_GOAL, user.getUserGoal());\r\n        contentValues.put(KEY_USER_DAYS_AVAILABLE, user.getDaysAvailable());\r\n        contentValues.put(KEY_USER_INTENSITY, user.getIntensity());\r\n\r\n\r\n        long result = db.insert(TABLE_USER, null, contentValues);\r\n        if(result == -1){\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public boolean addActivityData(ActivitiesController activity){\r\n        SQLiteDatabase db = this.getWritableDatabase();\r\n\r\n        ContentValues contentValues = new ContentValues();\r\n        contentValues.put(KEY_ACTIVITIES_NAME, activity.getActivityName());\r\n        contentValues.put(KEY_ACTIVITIES_ACTIVITY_TYPE, activity.getActivityType());\r\n        contentValues.put(KEY_ACTIVITIES_WORKOUT_LEVEL, activity.getWorkoutLvl());\r\n        contentValues.put(KEY_ACTIVITIES_DAYS_PER_WEEK, activity.getDaysPerWeek());\r\n        contentValues.put(KEY_ACTIVITIES_INTENSITY_LEVEL, activity.getIntensityLvl());\r\n        contentValues.put(KEY_ACTIVITIES_EQUIPMENT_GROUP, activity.getEquipmentGroup());\r\n\r\n\r\n        long result = db.insert(TABLE_USER, null, contentValues);\r\n        if(result == -1){\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/fyp_01/database/DatabaseHelper.java	(revision 4f6210a1701d9a3dd726eef4fd99c1aa569d5bb0)
+++ app/src/main/java/com/example/fyp_01/database/DatabaseHelper.java	(date 1610752701684)
@@ -2,18 +2,30 @@
 
 import android.content.ContentValues;
 import android.content.Context;
+import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.widget.Toast;
 
 import androidx.annotation.Nullable;
 
+import com.example.fyp_01.R;
 import com.example.fyp_01.activities.ActivitiesController;
+import com.example.fyp_01.recommendations.StretchingAdapter;
+import com.example.fyp_01.recommendations.StretchingModel;
 import com.example.fyp_01.user.UserController;
 
+import java.io.ByteArrayOutputStream;
+import java.util.ArrayList;
+
 public class  DatabaseHelper extends SQLiteOpenHelper {
 
+    Context context;
     public static final String DATABASE_NAME = "Database.db";
-    public static final int VERSION_NAME = 8;
+
+    public static final int VERSION_NAME = 13;
     public static final String TABLE_USER = "users_table";
     public static final String KEY_USER_ID = "users_id";
     public static final String KEY_USER_NAME = "users_name";
@@ -31,6 +43,12 @@
     public static final String KEY_ACTIVITIES_WORKOUT_LEVEL = "activities_workout_level";
     public static final String KEY_ACTIVITIES_EQUIPMENT_GROUP = "activities_equipment_group";
 
+    public static final String TABLE_ACTIVITIES_IMAGES = "activities_images_table";
+    public static final String KEY_ACTIVITIES_IMAGE = "activities_image";
+
+    private ByteArrayOutputStream objectByteArrayOutputStream;
+    private byte[] imgInByte;
+
     public DatabaseHelper(@Nullable Context context) {
         super(context, DATABASE_NAME, null, VERSION_NAME);
     }
@@ -43,12 +61,16 @@
         db.execSQL("CREATE TABLE " + TABLE_ACTIVITIES + " (" + KEY_ACTIVITIES_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " + KEY_ACTIVITIES_NAME + " TEXT, " +
                 KEY_ACTIVITIES_ACTIVITY_TYPE + " TEXT, " + KEY_ACTIVITIES_WORKOUT_LEVEL + " TEXT, " + KEY_ACTIVITIES_DAYS_PER_WEEK + " INTEGER, " +
                 KEY_ACTIVITIES_INTENSITY_LEVEL + " TEXT," + KEY_ACTIVITIES_EQUIPMENT_GROUP + " TEXT" +")");
+
+        db.execSQL("CREATE TABLE " + TABLE_ACTIVITIES_IMAGES + " (" + KEY_ACTIVITIES_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " + KEY_ACTIVITIES_NAME + " TEXT, " +
+                KEY_ACTIVITIES_IMAGE + " BLOB" +")");
     }
 
     @Override
     public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
         db.execSQL("DROP TABLE IF EXISTS " + TABLE_USER);
         db.execSQL("DROP TABLE IF EXISTS " + TABLE_ACTIVITIES);
+        db.execSQL("DROP TABLE IF EXISTS " + TABLE_ACTIVITIES_IMAGES);
         onCreate(db);
     }
 
@@ -92,4 +114,39 @@
             return true;
         }
     }
+
+    public void addActivitiesImageData(StretchingModel model){
+        SQLiteDatabase db = this.getWritableDatabase();
+
+        Bitmap imageToStoreBitmap = model.getStretchingActivitiesImage();
+        objectByteArrayOutputStream = new ByteArrayOutputStream();
+        imageToStoreBitmap.compress(Bitmap.CompressFormat.JPEG, 100, objectByteArrayOutputStream);
+        imgInByte = objectByteArrayOutputStream.toByteArray();
+
+        ContentValues contentValues = new ContentValues();
+        contentValues.put(KEY_ACTIVITIES_NAME, model.getStretchingActivitiesName());
+        contentValues.put(KEY_ACTIVITIES_IMAGE, imgInByte);
+
+        db.insert(TABLE_ACTIVITIES_IMAGES, null, contentValues);
+    }
+    //retrieve image_table data from database
+    public ArrayList<StretchingModel> getActivitiesImageData(){
+        ArrayList<StretchingModel> stretchingModels = new ArrayList<>();
+        Bitmap imageToRetrieve;
+
+        SQLiteDatabase db = this.getReadableDatabase();
+        Cursor cursor = db.rawQuery("select * from activities_images_table", null);
+
+        if (cursor.getCount() != 0) {
+            while (cursor.moveToNext()) {
+                //int id = cursor.getInt(0);
+                String activityName = cursor.getString(1);
+                imgInByte = cursor.getBlob(2);
+                imageToRetrieve = BitmapFactory.decodeByteArray(imgInByte, 0, imgInByte.length);
+                StretchingModel stretchingModel = new StretchingModel(activityName, imageToRetrieve);
+                stretchingModels.add(stretchingModel);
+            }
+        }
+        return stretchingModels;
+    }
 }
Index: app/src/main/java/com/example/fyp_01/recommendations/StretchingModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.fyp_01.recommendations;\r\n\r\npublic class StretchingModel {\r\n    Integer stretchingActivitiesImages;\r\n    String stretchingActivitiesNames;\r\n\r\n    public StretchingModel(Integer stretchingActivitiesImages, String stretchingActivitiesNames){\r\n        this.stretchingActivitiesImages = stretchingActivitiesImages;\r\n        this.stretchingActivitiesNames = stretchingActivitiesNames;\r\n    }\r\n\r\n    public Integer getStretchingActivitiesImages(){\r\n        return stretchingActivitiesImages;\r\n    }\r\n    public String getStretchingActivitiesNames(){\r\n        return stretchingActivitiesNames;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/fyp_01/recommendations/StretchingModel.java	(revision 4f6210a1701d9a3dd726eef4fd99c1aa569d5bb0)
+++ app/src/main/java/com/example/fyp_01/recommendations/StretchingModel.java	(date 1610736782010)
@@ -1,18 +1,28 @@
 package com.example.fyp_01.recommendations;
 
+import android.graphics.Bitmap;
+
 public class StretchingModel {
-    Integer stretchingActivitiesImages;
-    String stretchingActivitiesNames;
+
+    private String stretchingActivitiesName;
+    private Bitmap stretchingActivitiesImage;
+
+    public StretchingModel(String stretchingActivitiesName, Bitmap stretchingActivitiesImage) {
+        this.stretchingActivitiesName = stretchingActivitiesName;
+        this.stretchingActivitiesImage = stretchingActivitiesImage;
+    }
 
-    public StretchingModel(Integer stretchingActivitiesImages, String stretchingActivitiesNames){
-        this.stretchingActivitiesImages = stretchingActivitiesImages;
-        this.stretchingActivitiesNames = stretchingActivitiesNames;
+    public void setStretchingActivitiesName(String stretchingActivitiesName) {
+        this.stretchingActivitiesName = stretchingActivitiesName;
+    }
+    public void setStretchingActivitiesImage(Bitmap stretchingActivitiesImage) {
+        this.stretchingActivitiesImage = stretchingActivitiesImage;
     }
 
-    public Integer getStretchingActivitiesImages(){
-        return stretchingActivitiesImages;
+    public String getStretchingActivitiesName(){
+        return stretchingActivitiesName;
     }
-    public String getStretchingActivitiesNames(){
-        return stretchingActivitiesNames;
+    public Bitmap getStretchingActivitiesImage(){
+        return stretchingActivitiesImage;
     }
 }
Index: app/src/main/java/com/example/fyp_01/user/UserView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.fyp_01.user;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.fyp_01.database.DatabaseHelper;\r\nimport com.example.fyp_01.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class UserView extends AppCompatActivity {\r\n\r\n    DatabaseHelper databaseHelper;\r\n\r\n    private Button mAddUserButton;\r\n    private TextView mUserName, mUserGoal, mDaysAvailable, mIntensity, mWorkoutGroup;\r\n\r\n    private EditText mUserNameInput;\r\n    private Spinner mUserGoalInput, mDaysAvailableInput, mIntensityInput, mWorkoutGroupInput;\r\n\r\n    UserController user = new UserController(new UserData());\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_user_data);\r\n\r\n        initialization();\r\n        listeners();\r\n    }\r\n\r\n    private void initialization(){\r\n        mAddUserButton = findViewById(R.id.addUser);\r\n        mUserName = findViewById(R.id.userName);\r\n        mUserGoal = findViewById(R.id.userGoal);\r\n        mDaysAvailable = findViewById(R.id.daysAvailable);\r\n        mIntensity = findViewById(R.id.intensity);\r\n        mWorkoutGroup = findViewById(R.id.workoutGroup);\r\n\r\n        mUserNameInput = findViewById(R.id.userNameInput);\r\n        mUserGoalInput = findViewById(R.id.userGoalInput);\r\n        mDaysAvailableInput = findViewById(R.id.daysAvailableInput);\r\n        mIntensityInput = findViewById(R.id.intensityInput);\r\n        mWorkoutGroupInput = findViewById(R.id.workoutGroupInput);\r\n\r\n        user.setUserGoalSpinnerArray(userGoalSpinnerOptions());\r\n        user.setDaysAvailableSpinnerArray(DaysAvailableSpinnerOptions());\r\n        user.setIntensitySpinnerArray(intensitySpinnerOptions());\r\n        user.setWorkoutGroupSpinnerArray(workoutGroupSpinnerOptions());\r\n\r\n        ArrayAdapter<String> goalAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, user.getUserGoalSpinnerArray());\r\n        mUserGoalInput.setAdapter(goalAdapter);\r\n        ArrayAdapter<Integer> daysAvailableAdapter = new ArrayAdapter<Integer>(this, android.R.layout.simple_spinner_dropdown_item, user.getDaysAvailableSpinnerArray());\r\n        mDaysAvailableInput.setAdapter(daysAvailableAdapter);\r\n        ArrayAdapter<String> intensityAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, user.getIntensitySpinnerArray());\r\n        mIntensityInput.setAdapter(intensityAdapter);\r\n        ArrayAdapter<String> workoutGroupAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, user.getWorkoutGroupSpinnerArray());\r\n        mWorkoutGroupInput.setAdapter(workoutGroupAdapter);\r\n    }\r\n\r\n    private void listeners(){\r\n        mUserGoalInput.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                Object item = parent.getItemAtPosition(position);\r\n                if (item != null){\r\n                    user.setUserGoal(item.toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n                //TODO: Display Error Message.\r\n            }\r\n        });\r\n\r\n        mDaysAvailableInput.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                Object item = parent.getItemAtPosition(position);\r\n                if (item != null){\r\n                    user.setDaysAvailable((int)item);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n                //TODO: Display Error Message.\r\n            }\r\n        });\r\n\r\n        mIntensityInput.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                Object item = parent.getItemAtPosition(position);\r\n                if (item != null){\r\n                    user.setIntensity(item.toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n                //TODO: Display Error Message.\r\n            }\r\n        });\r\n\r\n        mWorkoutGroupInput.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                Object item = parent.getItemAtPosition(position);\r\n                if (item != null){\r\n                    user.setWorkoutGroup(item.toString());\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n                //TODO: Display Error Message.\r\n            }\r\n        });\r\n    }\r\n\r\n    private List<String> userGoalSpinnerOptions(){\r\n        List<String> spinnerArray = new ArrayList<String>();\r\n        spinnerArray.add(\"Aerobic\");\r\n        spinnerArray.add(\"Muscle Strengthening\");\r\n        spinnerArray.add(\"Stretching\");\r\n\r\n        return spinnerArray;\r\n    }\r\n\r\n    private List<Integer> DaysAvailableSpinnerOptions(){\r\n        List<Integer> spinnerArray = new ArrayList<Integer>();\r\n        spinnerArray.add(1);\r\n        spinnerArray.add(2);\r\n        spinnerArray.add(3);\r\n        spinnerArray.add(4);\r\n        spinnerArray.add(5);\r\n        spinnerArray.add(6);\r\n        spinnerArray.add(7);\r\n\r\n        return spinnerArray;\r\n    }\r\n\r\n    private List<String> intensitySpinnerOptions(){\r\n        List<String> spinnerArray = new ArrayList<String>();\r\n        spinnerArray.add(\"Easy\");\r\n        spinnerArray.add(\"Moderate\");\r\n        spinnerArray.add(\"Hard\");\r\n\r\n        return spinnerArray;\r\n    }\r\n\r\n    private List<String> workoutGroupSpinnerOptions(){\r\n        List<String> spinnerArray = new ArrayList<String>();\r\n        spinnerArray.add(\"Beginner\");\r\n        spinnerArray.add(\"Intermediate\");\r\n        spinnerArray.add(\"Advanced\");\r\n\r\n        return spinnerArray;\r\n    }\r\n\r\n    public void addUserButton(View view){\r\n        retrieveUserData();\r\n        addUser();\r\n    }\r\n\r\n    private void addUser(){\r\n        databaseHelper = new DatabaseHelper(this);\r\n        boolean isInserted = databaseHelper.addUserData(user);\r\n\r\n        if(isInserted == true){\r\n            Toast.makeText(UserView.this, \"Data Added\", Toast.LENGTH_LONG).show();\r\n        }\r\n        else{\r\n            Toast.makeText(UserView.this, \"Data NOT Added\", Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private UserController retrieveUserData(){\r\n        user.setUserName(mUserNameInput.getText().toString());\r\n        user.setWorkoutGroup(user.getWorkoutGroup());\r\n        user.setUserGoal(user.getUserGoal());\r\n        user.setDaysAvailable(user.getDaysAvailable());\r\n        user.setIntensity(user.getIntensity());\r\n\r\n        return  user;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/fyp_01/user/UserView.java	(revision 4f6210a1701d9a3dd726eef4fd99c1aa569d5bb0)
+++ app/src/main/java/com/example/fyp_01/user/UserView.java	(date 1610752411247)
@@ -141,13 +141,9 @@
 
     private List<Integer> DaysAvailableSpinnerOptions(){
         List<Integer> spinnerArray = new ArrayList<Integer>();
-        spinnerArray.add(1);
-        spinnerArray.add(2);
-        spinnerArray.add(3);
-        spinnerArray.add(4);
-        spinnerArray.add(5);
-        spinnerArray.add(6);
-        spinnerArray.add(7);
+        for(int i=1;i<=7;i++){
+            spinnerArray.add(i);
+        }
 
         return spinnerArray;
     }
Index: app/src/main/java/com/example/fyp_01/activities/ActivitiesView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.fyp_01.activities;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.fyp_01.R;\r\nimport com.example.fyp_01.database.DatabaseHelper;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ActivitiesView extends AppCompatActivity {\r\n\r\n    DatabaseHelper databaseHelper;\r\n\r\n    private List<String> workoutLvlSpinnerOptions(){\r\n        List<String> spinnerArray = new ArrayList<String>();\r\n        spinnerArray.add(\"Beginner\");\r\n        spinnerArray.add(\"Intermediate\");\r\n        spinnerArray.add(\"Advanced\");\r\n\r\n        return spinnerArray;\r\n    }\r\n    private List<String> equipmentGroupSpinnerOptions(){\r\n        List<String> spinnerArray = new ArrayList<String>();\r\n        spinnerArray.add(\"None\");\r\n        spinnerArray.add(\"Little\");\r\n        spinnerArray.add(\"Moderate\");\r\n        spinnerArray.add(\"Full\");\r\n\r\n        return spinnerArray;\r\n    }\r\n    private List<String> activityTypeSpinnerOptions(){\r\n        List<String> spinnerArray = new ArrayList<String>();\r\n        spinnerArray.add(\"Aerobic\");\r\n        spinnerArray.add(\"Muscle Strengthening\");\r\n        spinnerArray.add(\"Stretching\");\r\n\r\n        return spinnerArray;\r\n    }\r\n    private List<String> intensityLvlSpinnerOptions(){\r\n        List<String> spinnerArray = new ArrayList<String>();\r\n        spinnerArray.add(\"Easy\");\r\n        spinnerArray.add(\"Moderate\");\r\n        spinnerArray.add(\"Hard\");\r\n\r\n        return spinnerArray;\r\n    }\r\n    private List<Integer> daysPerWeekSpinnerOptions(){\r\n        List<Integer> spinnerArray = new ArrayList<Integer>();\r\n        spinnerArray.add(1);\r\n        spinnerArray.add(2);\r\n        spinnerArray.add(3);\r\n        spinnerArray.add(4);\r\n        spinnerArray.add(5);\r\n        spinnerArray.add(6);\r\n        spinnerArray.add(7);\r\n\r\n        return spinnerArray;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*private TextView mIntensityLvl, mFatBurn, mMuscleBuild, mActivityName;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_recommendation_page);\r\n\r\n        mIntensityLvl = findViewById(R.id.intensityLvlValue);\r\n        mFatBurn = findViewById(R.id.fatBurnValue);\r\n        mMuscleBuild = findViewById(R.id.muscleBuildValue);\r\n        mActivityName = findViewById(R.id.activity_tiltle);\r\n\r\n        ActivitiesData data = new ActivitiesData();\r\n        data.setActivityName(\"Jogging\");\r\n        data.setFatBurn(true);\r\n        data.setMuscleBuild(false);\r\n        data.setIntensityLvl(1);\r\n\r\n        mActivityName.setText(data.getActivityName());\r\n        mIntensityLvl.setText(IntensityLevelsIntToString(data.getIntensityLvl()));\r\n        mFatBurn.setText(FatBurnBoolToString(data.getFatBurn()));\r\n        mMuscleBuild.setText(MuscleBuildBoolToString(data.getMuscleBuild()));\r\n    }\r\n\r\n    private String IntensityLevelsIntToString(int intensityLvl){\r\n        String stringIntensity;\r\n\r\n        switch (intensityLvl){\r\n            case (1):\r\n                stringIntensity = \"Easy\";\r\n                break;\r\n            case (2):\r\n                stringIntensity = \"Moderate\";\r\n                break;\r\n            case (3):\r\n                stringIntensity = \"Extreme\";\r\n                break;\r\n            default:\r\n                stringIntensity = \"\";\r\n                break;\r\n        }\r\n        return  stringIntensity;\r\n    }\r\n\r\n    private String FatBurnBoolToString(boolean fatBurn){\r\n        String stringFatBurn;\r\n\r\n        if (fatBurn == true){\r\n            stringFatBurn = \"Yes\";\r\n        }\r\n        else{\r\n            stringFatBurn = \"No\";\r\n        }\r\n        return stringFatBurn;\r\n    }\r\n\r\n    private String MuscleBuildBoolToString(boolean muscleBuild){\r\n        String stringMuscleBuild;\r\n\r\n        if (muscleBuild == true){\r\n            stringMuscleBuild = \"Yes\";\r\n        }\r\n        else{\r\n            stringMuscleBuild = \"No\";\r\n        }\r\n        return stringMuscleBuild;\r\n    }*/\r\n\r\n\r\n    //TODO: 1) refactor jogging activity. Will have activities database in the future. Assign data values depending on the database.\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/fyp_01/activities/ActivitiesView.java	(revision 4f6210a1701d9a3dd726eef4fd99c1aa569d5bb0)
+++ app/src/main/java/com/example/fyp_01/activities/ActivitiesView.java	(date 1610752701682)
@@ -50,13 +50,9 @@
     }
     private List<Integer> daysPerWeekSpinnerOptions(){
         List<Integer> spinnerArray = new ArrayList<Integer>();
-        spinnerArray.add(1);
-        spinnerArray.add(2);
-        spinnerArray.add(3);
-        spinnerArray.add(4);
-        spinnerArray.add(5);
-        spinnerArray.add(6);
-        spinnerArray.add(7);
+        for(int i=1;i<=7;i++){
+            spinnerArray.add(i);
+        }
 
         return spinnerArray;
     }
